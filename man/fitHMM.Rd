% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/fitHMM.R
\name{fitHMM}
\alias{fitHMM}
\title{Estimate parameters of Hidden Markov Model}
\usage{
fitHMM(model, use.em = TRUE, use.optimx = TRUE, em.control = list(),
  method = "BFGS", itnmax = 10000, optimx.control = list(), ...)
}
\arguments{
\item{model}{Hidden Markov model of class HMModel or MCHMModel.}

\item{use.em}{Logical, use EM algorithm at the start of parameter estimation.
Default is TRUE. Currently not supported for models with covariates.}

\item{use.optimx}{Logical, use direct numerical optimization via \code{\link{optimx}} after EM algorithm. Default is TRUE.}

\item{em.control}{Optional list of control parameters for for EM algorithm. Possible arguments are
\itemize{
 \item{maxit}{Maximum number of iterations, default is 100.}
 \item{trace}{Level of printing. Possible values are 0 (prints nothing),
  1 (prints information at start and end of algorithm), and 2 (prints at every iteration).}
  \item{reltol}{Relative tolerance for convergence defined as \eqn{(tmp - sumlogLik)/(abs(sumlogLik)+0.1)}. Default is 1e-8.}
}}

\item{method}{Optimization method used by \code{optimx}. Default is \code{"BFGS"}. Note that \code{fitHMM} uses
Softmax parameterization so unconstrained optimization methods are used.}

\item{itnmax}{Maximum number of iterations use by \code{optimx}. Default is 10000.}

\item{optimx.control}{Optional list of additional arguments for \code{\link{optimx}} argument \code{control}.
Note that default values for \code{starttests} and \code{kkt} are set to \code{FALSE}, which differs from the default
behaviour of \code{optimx}. If EM algorithm is used, \code{fnscale} is also set to current optimum (unless modified by user).}

\item{...}{Additional arguments to optimx.}
}
\value{
List with components
\itemize{
 \item{model}{Estimated model.}
 \item{logLik}{Log-likelihood of the estimated model.}
  \item{em.results}{Results from EM algorithm.}
  \item{optimx.results}{Results from direct numerical optimization via \code{\link{optimx}}.}
}
}
\description{
Function \code{fitHMM} estimates the initial state, transition and emission probabilities of
hidden Markov model using numerical maximization of log-likelihood. Initial values for estimation
are taken from the corresponding components of model with preservation of original zero probabilities.
}
\details{
By default, estimation start with EM algorithm and then switches to direct numerical maximization.
}
\examples{
require(TraMineR)

data(biofam)
biofam <- biofam[1:500,]

## Building one channel per type of event left, children or married
bf <- as.matrix(biofam[, 10:25])
children <-  bf==4 | bf==5 | bf==6
married <- bf == 2 | bf== 3 | bf==6
left <- bf==1 | bf==3 | bf==5 | bf==6

children[children==TRUE] <- "Children"
children[children==FALSE] <- "Childless"

married[married==TRUE] <- "Married"
married[married==FALSE] <- "Single"

left[left==TRUE] <- "Left home"
left[left==FALSE] <- "With parents"

## Building sequence objects
child.seq <- seqdef(children)
marr.seq <- seqdef(married)
left.seq <- seqdef(left)

# Initial values for emission matrices
B_child <- matrix(NA, nrow=3, ncol=2)
B_child[1,] <- seqstatf(child.seq[,1:5])[,2]+0.1
B_child[2,] <- seqstatf(child.seq[,6:10])[,2]+0.1
B_child[3,] <- seqstatf(child.seq[,11:15])[,2]+0.1
B_child <- B_child/rowSums(B_child)

B_marr <- matrix(NA, nrow=3, ncol=2)
B_marr[1,] <- seqstatf(marr.seq[,1:5])[,2]+0.1
B_marr[2,] <- seqstatf(marr.seq[,6:10])[,2]+0.1
B_marr[3,] <- seqstatf(marr.seq[,11:15])[,2]+0.1
B_marr <- B_marr/rowSums(B_marr)

B_left <- matrix(NA, nrow=3, ncol=2)
B_left[1,] <- seqstatf(left.seq[,1:5])[,2]+0.1
B_left[2,] <- seqstatf(left.seq[,6:10])[,2]+0.1
B_left[3,] <- seqstatf(left.seq[,11:15])[,2]+0.1
B_left <- B_left/rowSums(B_left)

# Initial values for transition matrix
A <- matrix(c(0.9, 0.07, 0.03,
0,    0.9,  0.1,
0,      0,    1),
nrow=3, ncol=3, byrow=TRUE)

# Initial values for initial state probabilities
initialProbs <- c(0.9,0.09,0.01)

# Building hidden Markov model with initial parameter values
bHMM <- buildHMM(observations=list(child.seq, marr.seq, left.seq),
transitionMatrix=A,
emissionMatrix=list(B_child, B_marr, B_left),
initialProbs=initialProbs)

# Fitting hidden Markov model
HMM <- fitHMM(bHMM, em.control=list(maxit=100,reltol=1e-8),
itnmax=10000, method="BFGS")
}
\seealso{
\code{\link{buildHMM}} for building Hidden Markov models before fitting.
}

