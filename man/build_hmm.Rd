% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/build_hmm.R
\name{build_hmm}
\alias{build_hmm}
\title{Build a Hidden Markov Model}
\usage{
build_hmm(observations, transition_matrix, emission_matrix, initial_probs,
  state_names = NULL, channel_names = NULL)
}
\arguments{
\item{observations}{TraMineR stslist (see \code{\link{seqdef}}) containing
the sequences, or a list of such objects (one for each channel).}

\item{transition_matrix}{A matrix of transition probabilities.}

\item{emission_matrix}{A matrix of emission probabilities or a list of such
objects (one for each channel).}

\item{initial_probs}{A vector of initial state probabilities.}

\item{state_names}{A list of optional labels for the hidden states.}

\item{channel_names}{A vector of optional names for the channels.}
}
\value{
Object of class \code{hmm}
}
\description{
Function build_hmm constructs an object of class \code{hmm}.
}
\examples{
require(TraMineR)

data(biofam)
biofam <- biofam[1:500,]

# Single-channel data

biofam.seq <- seqdef(
  biofam[, 10:25],
  states = c("Parent", "Left", "Married", "Left+Marr",
             "Left+Child", "Left+Marr+Child", "Divorced"),
  start = 15
  )

# Starting values for the emission matrix
B <- matrix(NA, nrow = 4, ncol = 7)
B[1,] <- seqstatf(biofam.seq[, 1:4])[, 2] + 0.1
B[2,] <- seqstatf(biofam.seq[, 5:8])[, 2] + 0.1
B[3,] <- seqstatf(biofam.seq[, 9:12])[, 2] + 0.1
B[4,] <- seqstatf(biofam.seq[, 13:15])[, 2] + 0.1
B <- B / rowSums(B)

# Starting values for the transition matrix
A <- matrix(c(0.80, 0.10, 0.05, 0.05,
              0.05, 0.80, 0.10, 0.05,
              0.05, 0.05, 0.80, 0.10,
              0.05, 0.05, 0.10, 0.80), nrow=4, ncol=4, byrow=TRUE)

# Starting values for initial state probabilities
initial_probs <- c(0.9, 0.07, 0.02, 0.01)

# Building a hidden Markov model with starting values
bHMM <- build_hmm(
  observations = biofam.seq, transition_matrix = A,
  emission_matrix = B, initial_probs = initial_probs
)

#########################################

# Multichannel data

# Building one channel per type of event left, children or married
bf <- as.matrix(biofam[, 10:25])
children <-  bf==4 | bf==5 | bf==6
married <- bf == 2 | bf== 3 | bf==6
left <- bf==1 | bf==3 | bf==5 | bf==6

children[children==TRUE] <- "Children"
children[children==FALSE] <- "Childless"

married[married==TRUE] <- "Married"
married[married==FALSE] <- "Single"

left[left==TRUE] <- "Left home"
left[left==FALSE] <- "With parents"

# Building sequence objects
child.seq <- seqdef(children)
marr.seq <- seqdef(married)
left.seq <- seqdef(left)

# Starting values for emission matrices
B_child <- matrix(NA, nrow = 3, ncol = 2)
B_child[1,] <- seqstatf(child.seq[, 1:5])[, 2] + 0.1
B_child[2,] <- seqstatf(child.seq[, 6:10])[, 2] + 0.1
B_child[3,] <- seqstatf(child.seq[, 11:15])[, 2] + 0.1
B_child <- B_child / rowSums(B_child)

B_marr <- matrix(NA, nrow = 3, ncol = 2)
B_marr[1,] <- seqstatf(marr.seq[, 1:5])[, 2] + 0.1
B_marr[2,] <- seqstatf(marr.seq[, 6:10])[, 2] + 0.1
B_marr[3,] <- seqstatf(marr.seq[, 11:15])[, 2] + 0.1
B_marr <- B_marr / rowSums(B_marr)

B_left <- matrix(NA, nrow = 3, ncol = 2)
B_left[1,] <- seqstatf(left.seq[, 1:5])[, 2] + 0.1
B_left[2,] <- seqstatf(left.seq[, 6:10])[, 2] + 0.1
B_left[3,] <- seqstatf(left.seq[, 11:15])[, 2] + 0.1
B_left <- B_left / rowSums(B_left)

# Starting values for transition matrix
A <- matrix(c(0.9, 0.07, 0.03,
                0,  0.9,  0.1,
                0,    0,    1), nrow = 3, ncol = 3, byrow = TRUE)

# Starting values for initial state probabilities
init <- c(0.9, 0.09, 0.01)

# Building hidden Markov model with initial parameter values
bHMM <- build_hmm(
  observations = list(child.seq, marr.seq, left.seq),
  transition_matrix = A,
  emission_matrix = list(B_child, B_marr, B_left),
  initial_probs = init
  )
}
\seealso{
\code{\link{fit_hmm}} for fitting Hidden Markov models.
}

