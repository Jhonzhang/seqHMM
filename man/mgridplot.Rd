% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/mgridplot.R
\name{mgridplot}
\alias{mgridplot}
\title{Plot Mixture Hidden Markov Models in a Grid}
\usage{
mgridplot(x, rows = NA, cols = NA, byrow = FALSE, withlegend = "bottom",
  legend.pos = "center", legend.prop = 0.5, title.legend = "auto",
  ncol.legend = "auto", with.missing.legend = "auto", row.prop = "auto",
  col.prop = "auto", cex.legend = 1, ...)
}
\arguments{
\item{x}{A \code{mixHMModel} object.}

\item{rows,cols}{Optional arguments to arrange cluster plots.}

\item{byrow}{Controls the order of plotting. Defaults to \code{FALSE}, i.e. plots
  are arranged columnwise.}

\item{withlegend}{defines if and where the legend of the state colors is
  plotted. Possible values include \code{"bottom"} (the default),
  \code{"top"}, \code{"left"}, and \code{"right"}.
  \code{FALSE} omits the legend.}

\item{legend.pos}{Defines the positions of the legend boxes relative to the
  cluster graphs. One of \code{"bottomright"}, \code{"bottom"}, \code{"bottomleft"},
  \code{"left"}, \code{"topleft"}, \code{"top"}, \code{"topright"},
  \code{"right"} and \code{"center"} (the default).}

\item{legend.prop}{The proportion of legends}

\item{title.legend}{The titles for the legend boxes. The default \code{"auto"} takes
  the titles from the cluster names in x. \code{NA} prints no title.}

\item{ncol.legend}{(A vector of) the number of columns for the legend(s). The
  default \code{"auto"} creates one column for each legend.}

\item{row.prop}{Sets the proportions of the row heights of the grid. The default
  value is \code{"auto"} for even row heights. Takes a vector of values from
  0 to 1, with values summing to 1.}

\item{col.prop}{Sets the proportion of the column heights of the grid. The default
  value is \code{"auto"} for even column widths. Takes a vector of values
  from 0 to 1, with values summing to 1.}

\item{cex.legend}{Expansion factor for setting the size of the font for the
  labels in the legend. The default value is 1. Values lesser than 1 will
  reduce the size of the font, values greater than 1 will increase the size.}

\item{...}{Other parameters passed on to \code{\link{plot.HMModel}}.}
}
\description{
Function \code{mgridplot} plots multiple \code{mixHMModel} graphs to a
grid.
}
\examples{
require(TraMineR)

data(biofam)
biofam <- biofam[complete.cases(biofam[c(2:4)]),]
biofam <- biofam[1:500,]

## Building one channel per type of event left, children or married
bf <- as.matrix(biofam[, 10:25])
children <-  bf==4 | bf==5 | bf==6
married <- bf == 2 | bf== 3 | bf==6
left <- bf==1 | bf==3 | bf==5 | bf==6 | bf==7

children[children==TRUE] <- "Children"
children[children==FALSE] <- "Childless"
# Divorced parents
div <- bf[(rowSums(bf==7)>0 & rowSums(bf==5)>0) |
            (rowSums(bf==7)>0 & rowSums(bf==6)>0),]
children[rownames(bf) \%in\% rownames(div) & bf==7] <- "Children"

married[married==TRUE] <- "Married"
married[married==FALSE] <- "Single"
married[bf==7] <- "Divorced"

left[left==TRUE] <- "Left home"
left[left==FALSE] <- "With parents"
# Divorced living with parents (before divorce)
wp <- bf[(rowSums(bf==7)>0 & rowSums(bf==2)>0 & rowSums(bf==3)==0 &  rowSums(bf==5)==0 &  rowSums(bf==6)==0) |
           (rowSums(bf==7)>0 & rowSums(bf==4)>0 & rowSums(bf==3)==0 &  rowSums(bf==5)==0 &  rowSums(bf==6)==0),]
left[rownames(bf) \%in\% rownames(wp) & bf==7] <- "With parents"

## Building sequence objects
child.seq <- seqdef(children, start=15)
marr.seq <- seqdef(married, start=15)
left.seq <- seqdef(left, start=15)

## Starting values for emission probabilities

# Cluster 1
alphabet(child.seq) # Checking for the order of observed states
B1_child <- matrix(c(0.99, 0.01, # High probability for childless
                     0.99, 0.01,
                     0.99, 0.01,
                     0.99, 0.01), nrow=4, ncol=2, byrow=TRUE)

alphabet(marr.seq)
B1_marr <- matrix(c(0.01, 0.01, 0.98, # High probability for single
                    0.01, 0.01, 0.98,
                    0.01, 0.98, 0.01, # High probability for married
                    0.98, 0.01, 0.01), # High probability for divorced
                    nrow=4, ncol=3, byrow=TRUE)

alphabet(left.seq)
B1_left <- matrix(c(0.01, 0.99, # High probability for living with parents
                    0.99, 0.01, # High probability for having left home
                    0.99, 0.01
                    0.99, 0.01), nrow=4, ncol=2, byrow=TRUE)

B2_marr <- matrix(c(0.01, 0.01, 0.98, # High probability for single
                     0.01, 0.01, 0.98,
                     0.01, 0.98, 0.01, # High probability for married
                     0.29, 0.7, 0.01),
                   nrow=4, ncol=3, byrow=TRUE)

B2_left <- matrix(c(0.01, 0.99, # High probability for living with parents
                     0.99, 0.01,
                     0.99, 0.01,
                     0.99, 0.01), nrow=4, ncol=2, byrow=TRUE)

# Sinkkuvanhemmat ja kotona asuvat yhdessÃ¤
B3_child <- matrix(c(0.99, 0.01, # High probability for childless
                      0.99, 0.01,
                      0.01, 0.99,
                      0.99, 0.01,
                      0.01, 0.99,
                      0.01, 0.99), nrow=6, ncol=2, byrow=TRUE)

B3_marr <- matrix(c(0.01, 0.01, 0.98, # High probability for single
                     0.01, 0.01, 0.98,
                     0.01, 0.01, 0.98,
                     0.01, 0.98, 0.01,
                     0.01, 0.98, 0.01, # High probability for married
                     0.98, 0.01, 0.01), # High probability for divorced
                   nrow=6, ncol=3, byrow=TRUE)

B3_left <- matrix(c(0.01, 0.99, # High probability for living with parents
                     0.99, 0.01,
                     0.50, 0.50,
                     0.01, 0.99,
                     0.99, 0.01,
                     0.99, 0.01), nrow=6, ncol=2, byrow=TRUE)

# Initial values for transition matrices
A1 <- matrix(c(0.8,   0.16, 0.03, 0.01,
               0,    0.9, 0.07, 0.03,
               0,      0,  0.9,  0.1,
               0,      0,    0,    1),
             nrow=4, ncol=4, byrow=TRUE)

A2 <- matrix(c(0.8, 0.10, 0.05,  0.03, 0.01, 0.01,
               0,    0.7,  0.1,   0.1, 0.05, 0.05,
               0,      0,  0.85, 0.01,  0.1, 0.04,
               0,      0,    0,   0.9, 0.05, 0.05,
               0,      0,    0,     0,  0.9,  0.1,
               0,      0,    0,     0,    0,    1),
             nrow=6, ncol=6, byrow=TRUE)

# Initial values for initial state probabilities
initialProbs1 <- c(0.9, 0.07, 0.02, 0.01)
initialProbs2 <- c(0.9, 0.04, 0.03, 0.01, 0.01, 0.01)

# Creating covariate swiss
bio$swiss <- bio$nat_1_02=="Switzerland"
bio$swiss[bio$swiss==TRUE] <- "Swiss"
bio$swiss[bio$swiss==FALSE] <- "Other"

# Build mixture HMM
bmHMM <- buildMixHMM(observations=list(child.seq, marr.seq, left.seq),
                       transitionMatrix=list(A1,A2,A1),
                       emissionMatrix=list(list(B1_child, B1_marr, B1_left),
                                           list(B2_child, B2_marr, B2_left),
                                           list(B3_child, B3_marr, B3_left)),
                       initialProbs=list(initialProbs1, initialProbs2,
                                         initialProbs1),
                       formula=~sex*birthyr+sex*swiss, data=bio,
                       clusterNames=c("Cluster 1", "Cluster 2", "Cluster 3"),
                       channelNames=c("Parenthood", "Marriage", "Left home"))

mHMM <- fitMixHMM(bmHMM)

mgridplot(mHMM$model)

mgridplot(mHMM$model, cols=2, withlegend="right", xlim=c(0,4), legend.prop=0.3)
}
\seealso{
\code{\link{ssp}} for defining the plot before using
  \code{gridplot}, and \code{\link{plot.ssp}} for plotting only one ssp object.
}

